#!/usr/bin/env bash
set -eufo pipefail
trap 'echo "$0: line ${LINENO}: exiting because of error";exit 1' ERR

while getopts "a:h" options; do case $options in
  a) a="$OPTARG" ;;
  h) exit ;;
esac; done; shift $((OPTIND - 1))

: ${a:="default for var a"}

: ${min_instances:="8000"}


: ${trace:=0}
if [[ "$trace" -eq 1 ]];then
  PS4='${LINENO}: '
  set -x
fi

if [[ "$#" -eq 0 ]];then
  :

elif [[ "$1" == "test" ]];then shift
  # -p file is a pipe
  # -s is non empty file
  if [[ -p /dev/stdin ]]; then
    echo "stdin:yes"
  else
    echo "stdin:no"
  fi

elif [[ "$1" == "clean" ]];then shift
  sed \
    -e '0,/^---/d' \
    -e '/^Total/d' \
  | awk \
    -v min_instances="${min_instances}" \
    '{if ($2 > min_instances) {print $4,$2,$3}}' \
  | sort 

elif [[ "$1" == "compare" ]];then shift
  cat $@ \
    | gawk  \
    'BEGIN{} {a[$1]=a[$1] " " $3} END{for(i in a){split(a[i],b," ");if(length(b)>=3){print i, b[2]/b[1], b[3]/b[1] }}}'
    # 'BEGIN{} {a[$1]=a[$1] " " $3} END{for(i in a){split(a[i],b," ");if(length(b)>=3){print i, b[1], b[2], b[3] }}}'

elif [[ "$1" == "format" ]];then shift
  sed \
    -e '0,/^---/d' \
    -e '/^Total/d' \
  | awk '{if ($2 > 8000) {print $4,$3,$2}}' \
  | sort 

else
  echo "unknown command: $@" >&2
  exit 1

fi

